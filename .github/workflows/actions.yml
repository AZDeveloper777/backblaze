name: Actions CI

on:
  push:
    branches:
    - master
    paths: 
      - '**'
      - '!.editorconfig'
      - '!.gitattributes'
      - '!.gitignore'
      - '!*.md'
      - '!LICENSE'

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  CONFIGURATION: 'Release'
  VERBOSITY:  'Minimal'

jobs: 
  Build:
    name: Build on ${{ matrix.dotnet }}    
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        dotnet: ['3.1.100']
    
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Setup dotnet core (${{ matrix.dotnet }})
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}
      
    - name: Display dotnet core (${{ matrix.dotnet }})
      run: dotnet --info

    - name: Extract branch name, short SHA, date etc. into variables
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "##[set-output name=commit;]$(echo ${GITHUB_SHA:0:7})"
        echo "##[set-output name=date;]$(echo $(date -u --iso-8601=seconds))"
        echo "##[set-output name=date_version;]$(echo $(date -u +%Y%m%d.%H%M%S))"
        echo "##[set-output name=copyright;]$(echo Â© $(date -u +%Y) Bytewizer.  All rights reserved."
        echo "##[set-output name=version;]$(echo 1.0.0.$(date +%Y%m%d%H%M%S))"
        echo "##[set-output name=head;]$(echo $(git rev-list --count HEAD))"
      id: info
    
    - name: Print variables
      run: |
        echo branch=${{ steps.info.outputs.branch }}
        echo commit=${{ steps.info.outputs.commit }}
        echo date=${{ steps.info.outputs.date }}
        echo date_version=${{ steps.info.outputs.date_version }}
        echo copyright=${{ steps.info.outputs.copyright }}
        echo version=${{ steps.info.outputs.version }}
        echo head=${{ steps.info.outputs.head }}
    
    - name: Restore dotnet core (${{ matrix.dotnet }})
      run: dotnet restore --verbosity ${VERBOSITY}
    
    - name: Build dotnet core (${{ matrix.dotnet }})
      run: >-
        dotnet build -p:Version==${{ steps.info.outputs.version }}
        --no-restore
        --verbosity ${VERBOSITY}
        --configuration ${CONFIGURATION} 
      
    # - name: Run dotnet core tests (${{ matrix.dotnet }})
    #   run: >-
    #     dotnet test
    #     --no-restore 
    #     --no-build 
    #     --verbosity ${VERBOSITY} 
    #     --configuration ${CONFIGURATION} 
    #     --results-directory artifacts 
    #     --logger:trx
    #   env:
    #     Agent__ApplicationKey: ${{ secrets.AGENT_APPLICATION_KEY }}
    #     Agent__KeyId: ${{ secrets.AGENT_KEY_ID }}
        
    - name: Pack dotnet core (${{ matrix.dotnet }})
      run: >- 
        dotnet pack -p:Version==${{ steps.info.outputs.version }}
        --include-symbols 
        --no-restore 
        --no-build 
        --verbosity ${VERBOSITY} 
        --configuration ${CONFIGURATION} 
        --output .builds/artifacts
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v1
      with:
        name: Build
        path: .builds/artifacts
