name: Actions CI

on:
  push:
    branches:
    - master
env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  CONFIGURATION: 'Release'
  VERBOSITY:  'Minimal'

jobs: 
  Build:
    name: Build on ${{ matrix.dotnet }}    
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        dotnet: ['3.0.100']
    
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Setup dotnet core (${{ matrix.dotnet }})
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}
      
    - name: Restore dotnet core (${{ matrix.dotnet }})
      run: dotnet restore --verbosity ${VERBOSITY}
    
    - name: Build dotnet core (${{ matrix.dotnet }})
      run: >-
        dotnet build -p:Version=$(date "+%Y.%m.%d.%H%M") 
        --no-restore
        --verbosity ${VERBOSITY}
        --configuration ${CONFIGURATION} 
      
#    - name: Run dotnet core tests
#      run: dotnet test ./test/unit/Backblaze.Tests.Unit.csproj --verbosity ${VERBOSITY} --configuration ${CONFIGURATION} --no-build --results-directory artifacts --logger:trx
#      env:
#        Agent__ApplicationKey: ${{ secrets.AGENT_APPLICATION_KEY }}
#        Agent__KeyId: ${{ secrets.AGENT_KEY_ID }}
        
    - name: Pack dotnet core (${{ matrix.dotnet }})
      run: dotnet pack -p:PackageVersion=$(date "+%Y.%m.%d.%H%M") -p:SymbolPackageFormat=snupkg --include-symbols --no-restore --no-build --verbosity ${VERBOSITY} --configuration ${CONFIGURATION} --output artifacts
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v1
      with:
        name: Build
        path: artifacts
